# Javascript Node CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

commands:
  aws-setup:
    steps:
      - run:
          name: Install AWS CLI
          command: sudo pip install awscli
  lambda-deploy:
    parameters:
      app:
        type: string
    steps:
      - run:
          name: Upload build to S3 bucket
          command: "aws s3 cp release.zip s3://<<parameters.app>>-deploy"
      - run:
          name: Publish new function version
          command: "aws lambda update-function-code --region us-east-1 --function-name <<parameters.app>>  --s3-bucket <<parameters.app>>-deploy --s3-key release.zip --publish --query '{Name:FunctionName,Version:Version}' --output table"





jobs:
  # Install dependencies, run tests, and compile for Lambda.
  build:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package-lock.json" }}
          - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm test
      - run: npm run compile
      # When we're on npm 5.7+, add this back in. <https://git.io/fhMbF>
      # - run: npm prune --production
      - run:
          name: Compress source
          command: cd ~/app && zip -r release.zip .
      - persist_to_workspace:
          root: .
          paths:
            - release.zip


  # Base job to deploy to a Lambda function. <https://goo.gl/iDdcpb>
  # We use a '&deploy' reference to clone this for each environment.
  deploy: &deploy
    docker:
      - image: circleci/python:3.6
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - aws-setup

  # Configure environment-specific deploy jobs with reference.
  deploy-dev:
    <<: *deploy
    steps:
      - lambda-deploy
          app: dosomething-graphql-dev
  deploy-qa:
    <<: *deploy
    steps:
      - lambda-deploy
          app: dosomething-graphql-qa
  deploy-production:
    <<: *deploy
    steps:
      - lambda-deploy
          app: dosomething-graphql


# Configure workflows & scheduled jobs:
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - hold:
          type: approval
          requires:
            - deploy-dev
            - deploy-qa
          filters:
            branches:
              only: circleci-workflow
      - deploy-dev:
          context: dosomething-graphql-dev
          requires:
            - build
          filters:
            branches:
              only: circleci-workflow
      - deploy-qa:
          context: dosomething-graphql-qa
          requires:
            - build
          filters:
            branches:
              only: circleci-workflow
      - deploy-production:
          context: dosomething-graphql
          requires:
            - hold
          filters:
            branches:
              only: circleci-workflow
